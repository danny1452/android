plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.anushka.roomdemo"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    // add data binding dependencies so that you can do two way binding - enabled = true
    dataBinding{
        enabled = true
    }
}

dependencies {
    def lifecycle_version = "2.6.0-alpha01"
    def room_version = "2.4.3"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // ViewModel & LiveData
    // add view model dependencies and use view model so that app data will persist for configuration change like - screen rotation, language change
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // as live data dependencies and use live as observable data holder class - your view will be updated as soon as data changes
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // room data base iss wrapper for mysql data, it generates boiler plate code database operation using provided annotations
    // Room
    implementation "androidx.room:room-runtime:$room_version"
    // plug in required for annotation processing
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // use coroutine for multi processing and giving db operation to background thread
    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}